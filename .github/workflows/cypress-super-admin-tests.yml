name: Run Cypress Super Admin Tests

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      pr_branch:
        description: 'Checkout this branch from the LEVANTE repository and execute CI/CD tests on it.'
        required: true

concurrency:
  group: cypress-tests-${{ github.ref }}-0
  cancel-in-progress: true

jobs:
  cypress-run:
    name: Run Cypress Super Admin Tests
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, edge]
        containers: [1, 2]
    env:
      NODE_OPTIONS: '--max_old_space_size=8192'
      NODE_ENV: 'test'
      CYPRESS_BASE_URL: 'http://localhost:5173'
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      COMMIT_INFO_MESSAGE: Super Admin E2E Tests for PR ${{ github.event.number }} "${{ github.event.pull_request.title }}" from commit "${{ github.event.pull_request.head.sha }}"
      COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}
      PARTNER_ADMIN_USERNAME: ${{ secrets.PARTNER_ADMIN_USERNAME }}
      PARTNER_ADMIN_PASSWORD: ${{ secrets.PARTNER_ADMIN_PASSWORD }}
      PARTNER_ADMIN_ID: ${{ secrets.PARTNER_ADMIN_ID }}
      PARTICIPANT_USERNAME: ${{ secrets.PARTICIPANT_USERNAME}}
      PARTICIPANT_PASSWORD: ${{ secrets.PARTICIPANT_PASSWORD }}
      PARTICIPANT_EMAIL: ${{ secrets.PARTICIPANT_EMAIL }}
      PARTICIPANT_EMAIL_PASSWORD: ${{ secrets.PARTICIPANT_EMAIL_PASSWORD }}
      SUPER_ADMIN_USERNAME: ${{ secrets.SUPER_ADMIN_USERNAME }}
      SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}
      SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
      SUPER_ADMIN_ID: ${{ secrets.SUPER_ADMIN_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VITE_APPCHECK_DEBUG_TOKEN: ${{ secrets.VITE_APPCHECK_DEBUG_TOKEN }}
    steps:
      # For workflows triggered by pull requests
      - name: Checkout PR code
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # For workflows triggered manually, targeting the LEVANTE dashboard repository specifically
      - name: Checkout manual trigger code
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.pr_branch }}
          repository: levante-framework/levante-dashboard
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Cache build output
        id: cache-build-output
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build project
        run: npm run build

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          start: npm run dev
          wait-on: ${{ env.CYPRESS_BASE_URL }}
          wait-on-timeout: 120
          record: true
          parallel: true
          spec: 'cypress/e2e/super-admin/default-tests/**/*'
          ci-build-id: ${{ github.run_id }}-${{ matrix.browser }}

  cypress-clean-up:
    needs: cypress-run
    name: Run Cypress Clean-Up tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]
        containers: [1]
    env:
      NODE_OPTIONS: '--max_old_space_size=8192'
      NODE_ENV: 'test'
      CYPRESS_BASE_URL: 'http://localhost:5173'
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      COMMIT_INFO_MESSAGE: Super Admin Clean-Up Tests for PR ${{ github.event.number }} "${{ github.event.pull_request.title }}" from commit "${{ github.event.pull_request.head.sha }}"
      COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}
      PARTNER_ADMIN_USERNAME: ${{ secrets.PARTNER_ADMIN_USERNAME }}
      PARTNER_ADMIN_PASSWORD: ${{ secrets.PARTNER_ADMIN_PASSWORD }}
      PARTNER_ADMIN_ID: ${{ secrets.PARTNER_ADMIN_ID }}
      PARTICIPANT_USERNAME: ${{ secrets.PARTICIPANT_USERNAME}}
      PARTICIPANT_PASSWORD: ${{ secrets.PARTICIPANT_PASSWORD }}
      PARTICIPANT_EMAIL: ${{ secrets.PARTICIPANT_EMAIL }}
      PARTICIPANT_EMAIL_PASSWORD: ${{ secrets.PARTICIPANT_EMAIL_PASSWORD }}
      SUPER_ADMIN_USERNAME: ${{ secrets.SUPER_ADMIN_USERNAME }}
      SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}
      SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
      SUPER_ADMIN_ID: ${{ secrets.SUPER_ADMIN_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VITE_APPCHECK_DEBUG_TOKEN: ${{ secrets.VITE_APPCHECK_DEBUG_TOKEN }}

    steps:
      # For workflows triggered by pull requests
      - name: Checkout PR code
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # For workflows triggered manually, targeting the LEVANTE dashboard repository specifically
      - name: Checkout manual trigger code
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.pr_branch }}
          repository: levante-framework/levante-dashboard
          fetch-depth: 0

      - name: Restore node modules cache
        id: restore-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies (if not cached)
        run: npm ci
        if: steps.restore-node-modules.outputs.cache-hit != 'true'

      - name: Restore build output cache
        id: restore-build-output
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build project (if cache is not found)
        run: npm run build
        if: steps.restore-build-output.outputs.cache-hit != 'true'

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          start: npm run dev
          wait-on: ${{ env.CYPRESS_BASE_URL }}
          wait-on-timeout: 120
          record: true
          spec: 'cypress/e2e/super-admin/clean-up/**/*'
          ci-build-id: ${{ github.run_id }}-${{ matrix.browser }}
