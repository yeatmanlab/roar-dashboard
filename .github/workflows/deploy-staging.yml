name: Deploy to Staging

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}

permissions:
  contents: read
  id-token: write

jobs:
  # ––––––––––––––––––––––––––––––––––––––––––––––– #
  # Deploy app
  # ––––––––––––––––––––––––––––––––––––––––––––––– #
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: staging
    timeout-minutes: 15
    env:
      DOTENV_PRIVATE_KEY_STAGING: ${{ secrets.DOTENV_PRIVATE_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build app
        uses: ./.github/actions/build
        with:
          environment: staging
          github-pat: ${{ secrets.CI_GITHUB_PAT }}

      - name: Deploy app
        uses: ./.github/actions/deploy
        id: deployment
        with:
          firebase-channel: default
          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID_ADMIN }}
          gcp-workload-identity-provider: ${{ secrets.FIREBASE_WORKLOAD_IDENTITY_PROVIDER_ADMIN }}
          gcp-service-account-id: ${{ secrets.FIREBASE_HOSTING_SERVICE_ACCOUNT_ID_ADMIN }}

      - name: Deploy Firestore config to Admin instance
        uses: ./.github/actions/deploy-firestore-config
        with:
          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID_ADMIN }}
          gcp-workload-identity-provider: ${{ secrets.FIREBASE_WORKLOAD_IDENTITY_PROVIDER_ADMIN }}
          gcp-service-account-id: ${{ secrets.FIREBASE_FIRESTORE_SERVICE_ACCOUNT_ID_ADMIN }}
          config-directory: build/apps/dashboard/firebase/admin

      - name: Deploy Firestore config to Assessment instance
        uses: ./.github/actions/deploy-firestore-config
        with:
          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID_ASSESSMENT }}
          gcp-workload-identity-provider: ${{ secrets.FIREBASE_WORKLOAD_IDENTITY_PROVIDER_ASSESSMENT }}
          gcp-service-account-id: ${{ secrets.FIREBASE_FIRESTORE_SERVICE_ACCOUNT_ID_ASSESSMENT }}
          config-directory: build/apps/dashboard/firebase/assessment

  # ––––––––––––––––––––––––––––––––––––––––––––––– #
  # Update project manifests
  # ––––––––––––––––––––––––––––––––––––––––––––––– #
  update-manifests:
    name: Update manifests
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        projects: ${{ fromJSON(vars.ROAR_PROJECTS || '[]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: "roar-dashboard"

      - name: Update ${{ matrix.projects.name }} deployment manifest
        uses: ./roar-dashboard/.github/actions/update-deployment-manifest
        with:
          project-repo: ${{ matrix.projects.repo }}
          project-name: ${{ matrix.projects.name }}
          token: ${{ secrets.CI_GITHUB_PAT }}
          sha: ${{ github.event.pull_request.head.sha }}
